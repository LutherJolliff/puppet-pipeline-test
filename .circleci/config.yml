version: 2.1

orbs:
  snyk: snyk/snyk@0.0.8
  slack: circleci/slack@3.4.1

references:
  set_environment_variables: &set_environment_variables
    run:
      name: Set Environment Variables
      command: |
        echo 'export TF_VAR_env=$CIRCLE_BRANCH' >> ${BASH_ENV}
        echo 'export TF_VAR_app=$APP_NAME' >> ${BASH_ENV}
        echo 'export TF_VAR_node_type=$NODE_TYPE' >> ${BASH_ENV}
        echo 'export TF_VAR_region=${AWS_DEFAULT_REGION}' >> ${BASH_ENV}

  restore_deps: &restore_deps
    restore_cache:
      keys:
        - v2-dependencies-{{ checksum "package.json" }}
        - v2-dependencies-

  restore_git: &restore_git
    restore_cache:
      keys:
        - v2-cynerge-repo-{{ .Environment.CIRCLE_SHA1 }}
        - v2-cynerge-repo-

jobs:
  checkout-code:
    docker:
      - image: luther007/cynerge_images:latest
    steps:
      - checkout
      - save_cache:
          paths:
            - ./
          key: v2-cynerge-repo-{{ .Environment.CIRCLE_SHA1 }}

  install-deps:
    docker:
      - image: luther007/cynerge_images:latest
    steps:
      - <<: *restore_git
      - <<: *restore_deps
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
  unit_test:
    docker:
      - image: luther007/cynerge_images:latest
    steps:
      - <<: *restore_git
      - <<: *restore_deps
      - run:
          name: Lint
          command: npm run lint --force=true
      - run:
          name: Unit Test
          command: npm test
      - store_test_results:
          path: test-results/unit
  pa11y_test:
    docker:
      - image: luther007/cynerge_images:latest
    steps:
      - <<: *restore_git
      - <<: *restore_deps
      - run:
          name: Test Pa11y
          command: npm run build-pa11y
  snyk_test:
    docker:
      - image: luther007/cynerge_images:latest
    steps:
      - <<: *restore_git
      - <<: *restore_deps
      - snyk/scan:
          fail-on-issues: false
  terraform:
    docker:
      - image: luther007/cynerge_images:latest
    steps:
      - checkout
      - *set_environment_variables
      - run:
          name: Init 
          command: cd terraform/ && terraform init 
      - run:
          name: Apply
          command: cd terraform/ && terraform apply -auto-approve
      - slack/notify:
          channel: circleci-builds
          url: 'https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}'
          message: 'This is a test ${CIRCLE_BRANCH}'
          webhook: '${SLACK_WEBHOOK}'


  deploy:
    # working_directory: ~/app
    docker:
      - image: luther007/cynerge_images:latest
    steps:
      # - checkout
      # - run:
      #     name: Install Dependencies
      #     command: npm install
      - <<: *restore_git
      - <<: *restore_deps
      - run:
          name: AWS Dep 
          command: |
            sudo apt-get -y -qq update
            sudo apt-get -y install python-pip python-dev build-essential
            sudo yes | pip install --upgrade setuptools
            sudo yes | pip install awsebcli --upgrade
      - run:
          name: Deploying
          command: eb deploy $CIRCLE_BRANCH
  post-deploy:
    docker:
      - image: luther007/cynerge_images:latest
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Environment URL
          command: aws elasticbeanstalk describe-environments --environment-names $CIRCLE_BRANCH --query "Environments[*].CNAME" --output text
      - run:
          name: Environment Var
          command: echo 'export SITE_URL=$(aws elasticbeanstalk describe-environments --environment-names $CIRCLE_BRANCH --query "Environments[*].CNAME" --output text)' >> $BASH_ENV
      - run:
          name: Vulnerability Scan
          command: |
            if [[ -z "${SITE_URL}" ]]; then echo No site URL found. Skipping test...; else docker run -i owasp/zap2docker-stable zap-cli quick-scan --self-contained \
            --start-options '-config api.disablekey=true' http://$SITE_URL; fi

workflows:
  version: 2
  build:
    jobs:
      - checkout-code
      - install-deps:
          requires:
            - checkout-code
      - unit_test:
          requires:
            - install-deps
      - pa11y_test:
          requires:
            - install-deps
      - snyk_test:
          requires:
            - install-deps
      - terraform:
          requires:
            - install-deps
            - unit_test
            - pa11y_test
            - snyk_test
          # filters:
          #   branches:
          #     only:
          #       - master
          #       - staging
      - deploy:
          requires:
            - terraform
          filters:
            branches:
              only:
                - master
                - staging
      - post-deploy:
          requires:
            - deploy